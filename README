# Cache Simulator

## The Project

This project implements a cache simulator: a simple made-up cache that is implemented in software. However, the cache utiliza-
tion is assessed according to the sequence of memory references from real programs, which are “replayed
against” the cache simulator. The sequence of memory references are stored in reference trace files, which
are contained in the traces subdirectory. This is used to evaluate the correctness of the cache simulator. The trace files are generated by a Linux program called valgrind. For example,
typing
    linux> valgrind --log-fd=1 --tool=lackey -v --trace-mem=yes ls -l
on the command line runs the executable program “ls -l”, captures a trace of each of its memory accesses
in the order they occur, and prints them on stdout.
1
Valgrind memory traces have the following form:

    I 0400d7d4,8
    M 0421c7f0,4
    L 04f6b868,8
    S 7ff0005c8,8

Each line denotes one or two memory accesses. The format of each line is
    [space]operation address,size

The operation field denotes the type of memory access: “I” denotes an instruction load, “L” a data load,
“S” a data store, and “M” a data modify (i.e., a data load followed by a data store). There is never a space
before each “I”. There is always a space before each “M”, “L”, and “S”. The address field specifies a 64-bit
hexadecimal memory address. The size field specifies the number of bytes accessed by the operation.

## Description
The cache simulator in csim.c takes a valgrind memory trace as input, simulates the hit/miss behavior of a cache memory (with different E, B, and S parameters) on this trace, and
outputs the total number of hits, misses, and evictions. For this project, use the allocate-on-write policy to handle write misses in your implementation of the simulator.
We have provided you with the binary executable of a reference cache simulator, called csim-ref, that simulates the behavior of a cache with arbitrary size and associativity on a valgrind trace file. It uses the LRU (least-recently used) replacement policy when choosing which cache line to evict. The reference simulator takes the following command-line arguments:
	Usage: ./csim-ref [-hv] -s <s> -E <E> -b <b> -t <tracefile>
	• -h: Optional help flag that prints usage info
	• -v: Optional verbose flag that displays trace info
	• -s <s>: Number of set index bits (S = 2s is the number of sets)
	• -E <E>: Associativity (number of lines per set)
	• -b <b>: Number of block bits (B = 2b is the block size)
	• -t <tracefile>: Name of the valgrind trace to replay
The command-line arguments are based on the notation (s, E, and b) from page 597 of the CS:APP2e
textbook. For example:
2
linux> ./csim-ref -s 4 -E 1 -b 4 -t traces/yi.trace
hits:4 misses:5 evictions:3
The same example in verbose mode:
linux> ./csim-ref -v -s 4 -E 1 -b 4 -t traces/yi.trace
L 10,1 miss
M 20,1 miss hit
L 22,1 hit
S 18,1 hit
L 110,1 miss eviction
L 210,1 miss eviction
M 12,1 miss eviction hit
